<?xml version="1.0"?>
<project name="mRUBiS" default="build" basedir=".">

  <property environment="env"/>
  <property file="build.properties" />

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- The classpath used for the compilation process.			-->
  <!-- ========================================================== -->
  <path id="classpath">
    <pathelement location="${basedir}" />
    <fileset dir="${glassfish.lib}">
      <include name="javaee.jar" />
    </fileset>
  </path>
  <property name="build.classpath" refid="classpath" />

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- Run test client                                       	  	-->
  <!-- ========================================================== -->
  <target name="run-client" depends="reset-database">
    <!-- This is supper hacky but I'm not an Ant expert, feel free to open a PR and improve -->
    <!-- Emulates the following cmd: # java -cp $GLASSFISH_CLASSPATH:client/dist/mRUBiS-client.jar de.hpi.sam.rubis.client.main.ClientSession -->
    <exec executable="java">
      <arg value="-cp" />
      <arg value="${env.GLASSFISH_CLASSPATH}:./${projectfolder.client}/${folder.dist}/${name.project}-${module.client}.jar" />
      <arg value="${client.class}" />
    </exec>
  </target>

  <!-- ========================================================== -->
  <!-- Default target to trigger the complete build process. 	  	-->
  <!-- ========================================================== -->
  <target name="build">
    <antcall target="clean" />
    <antcall target="prepare" />
    <antcall target="compile" />
    <antcall target="package" />
    <antcall target="distribute" />
  </target>

  <!-- ========================================================== -->
  <!-- Deletes the folders for the generated jar files and		-->
  <!-- for the binaries. The folders and the generated files		-->
  <!-- and binaries contained in the folders are also deleted.	-->
  <!-- ========================================================== -->
  <target name="clean">
    <echo>Cleaning folders...</echo>

    <delete dir="${folder.dist}" />

    <delete dir="${projectfolder.businessObjects}/${folder.bin}" />
    <delete dir="${projectfolder.businessObjects}/${folder.dist}" />

    <delete dir="${projectfolder.contracts}/${folder.bin}" />
    <delete dir="${projectfolder.contracts}/${folder.dist}" />

    <delete dir="${projectfolder.entities}/${folder.bin}" />
    <delete dir="${projectfolder.entities}/${folder.dist}" />

    <delete dir="${projectfolder.persistenceService}/${folder.bin}" />
    <delete dir="${projectfolder.persistenceService}/${folder.dist}" />

    <delete dir="${projectfolder.queryService}/${folder.bin}" />
    <delete dir="${projectfolder.queryService}/${folder.dist}" />

    <delete dir="${projectfolder.authService}/${folder.bin}" />
    <delete dir="${projectfolder.authService}/${folder.dist}" />

    <delete dir="${projectfolder.userMgmt}/${folder.bin}" />
    <delete dir="${projectfolder.userMgmt}/${folder.dist}" />

    <delete dir="${projectfolder.itemMgmt}/${folder.bin}" />
    <delete dir="${projectfolder.itemMgmt}/${folder.dist}" />

    <delete dir="${projectfolder.bidAndBuyService}/${folder.bin}" />
    <delete dir="${projectfolder.bidAndBuyService}/${folder.dist}" />

    <delete dir="${projectfolder.reputationService}/${folder.bin}" />
    <delete dir="${projectfolder.reputationService}/${folder.dist}" />

    <delete dir="${projectfolder.inventoryMgmt}/${folder.bin}" />
    <delete dir="${projectfolder.inventoryMgmt}/${folder.dist}" />

    <delete dir="${projectfolder.client}/${folder.bin}" />
    <delete dir="${projectfolder.client}/${folder.dist}" />
  </target>

  <!-- ========================================================== -->
  <!-- Creates the folders for the generated jar files and 		-->
  <!-- for the binaries. The folders are removed by the clean		-->
  <!-- target.													-->
  <!-- ========================================================== -->
  <target name="prepare" depends="clean">
    <echo>Preparing...</echo>

    <mkdir dir="${folder.dist}" />

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.businessObjects}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.contracts}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.entities}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.persistenceService}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.queryService}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.authService}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.userMgmt}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.itemMgmt}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.bidAndBuyService}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.reputationService}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.inventoryMgmt}" />
    </antcall>

    <antcall target="prepareHelper">
      <param name="folder.prefix" value="${projectfolder.client}" />
    </antcall>
  </target>

  <!-- ========================================================== -->
  <!-- Helper target for creating folders. Called by the			-->
  <!-- prepare target.											-->
  <!-- ========================================================== -->
  <target name="prepareHelper" if="folder.prefix">
    <mkdir dir="${folder.prefix}/${folder.bin}" />
    <mkdir dir="${folder.prefix}/${folder.dist}" />
  </target>

  <!-- ========================================================== -->
  <!-- Main target for compiling the different sub-projects.		-->
  <!-- ========================================================== -->
  <target name="compile" depends="prepare">
    <echo>Start compiling...
      Classpath property is set to: ${build.classpath}</echo>
    <antcall target="compile-businessObjects" />
    <antcall target="compile-contracts" />
    <antcall target="compile-entities" />
    <antcall target="compile-persistenceService" />
    <antcall target="compile-queryService" />
    <antcall target="compile-authService" />
    <antcall target="compile-userMgmt" />
    <antcall target="compile-itemMgmt" />
    <antcall target="compile-bidAndBuyService" />
    <antcall target="compile-reputationService" />
    <antcall target="compile-inventoryService" />
    <antcall target="compile-client" />
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the business objects used as data transfer		-->
  <!-- objects in other sub-projects.							-->
  <!-- ========================================================== -->
  <target name="compile-businessObjects">
    <echo>Building ${projectfolder.businessObjects}/${folder.src}
        to ${projectfolder.businessObjects}/${folder.bin}</echo>
    <javac classpath="${build.classpath}" destdir="${projectfolder.businessObjects}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.businessObjects}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the contracts sub-projects containing sources		-->
  <!-- required by several other sub-projects.					-->
  <!-- ========================================================== -->
  <target name="compile-contracts">
    <echo>Building ${projectfolder.contracts}/${folder.src}
      to ${projectfolder.contracts}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.contracts}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.contracts}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the entities sub-projects containing sources		-->
  <!-- required by several sub-projects, esp. the EJB modules.	-->
  <!-- ========================================================== -->
  <target name="compile-entities">
    <echo>Building ${projectfolder.entities}/${folder.src}
      to ${projectfolder.entities}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.entities}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.entities}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the persistence service module,				-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-persistenceService">
    <echo>Building ${projectfolder.persistenceService}/${folder.src}
        to ${projectfolder.persistenceService}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}:${projectfolder.entities}/${folder.bin}" destdir="${projectfolder.persistenceService}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.persistenceService}/${folder.src}" />
    </javac>
  </target>


  <!-- ========================================================== -->
  <!-- Compiles the user query service module,				-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-queryService">
    <echo>Building ${projectfolder.queryService}/${folder.src}
          to ${projectfolder.queryService}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.entities}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.queryService}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.queryService}/${folder.src}" />
    </javac>
  </target>


  <!-- ========================================================== -->
  <!-- Compiles the authentication service module,				-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-authService">
    <echo>Building ${projectfolder.authService}/${folder.src}
      to ${projectfolder.authService}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.authService}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.authService}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the user management service module,				-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-userMgmt">
    <echo>Building ${projectfolder.userMgmt}/${folder.src}
      to ${projectfolder.userMgmt}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.userMgmt}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.userMgmt}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the item management service module,				-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-itemMgmt">
    <echo>Building ${projectfolder.itemMgmt}}/${folder.src}
          to ${projectfolder.itemMgmt}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.itemMgmt}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.itemMgmt}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the bid and buy service module,					-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-bidAndBuyService">
    <echo>Building ${projectfolder.bidAndBuyService}}/${folder.src}
            to ${projectfolder.bidAndBuyService}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.bidAndBuyService}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.bidAndBuyService}/${folder.src}" />
    </javac>
  </target>


  <!-- ========================================================== -->
  <!-- Compiles the reputation service module,					-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-reputationService">
    <echo>Building ${projectfolder.reputationService}}/${folder.src}
              to ${projectfolder.reputationService}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.reputationService}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.reputationService}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the inventory service module,						-->
  <!-- (a sub-project and component of mRUBiS).					-->
  <!-- ========================================================== -->
  <target name="compile-inventoryService">
    <echo>Building ${projectfolder.inventoryMgmt}}/${folder.src}
                to ${projectfolder.inventoryMgmt}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.inventoryMgmt}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.inventoryMgmt}/${folder.src}" />
    </javac>
  </target>

  <!-- ========================================================== -->
  <!-- Compiles the test client module,			      			-->
  <!-- ========================================================== -->
  <target name="compile-client">
    <echo>Building ${projectfolder.client}}/${folder.src}
                to ${projectfolder.client}/${folder.bin}</echo>
    <javac classpath="${build.classpath}:${projectfolder.contracts}/${folder.bin}:${projectfolder.businessObjects}/${folder.bin}" destdir="${projectfolder.client}/${folder.bin}" debug="on" source="${mrubis.java.version.source}" target="${mrubis.java.version.target}">
      <src path="${projectfolder.client}/${folder.src}" />
    </javac>
  </target>
  <!-- ========================================================== -->
  <!-- Main target for building the jar files.					-->
  <!-- ========================================================== -->
  <target name="package" depends="compile">
    <antcall target="package-persistenceService" />
    <antcall target="package-queryService" />
    <antcall target="package-authService" />
    <antcall target="package-userMgmt" />
    <antcall target="package-itemMgmt" />
    <antcall target="package-bidAndBuyService" />
    <antcall target="package-reputationService" />
    <antcall target="package-inventoryService" />
    <antcall target="package-client" />
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the persistence service.			-->
  <!-- ========================================================== -->
  <target name="package-persistenceService">
    <echo>Creating JAR for the Persistence Service...</echo>
    <jar destfile="${projectfolder.persistenceService}/${folder.dist}/${name.project}-${module.persistenceService}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.persistenceService}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.persistenceService}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
      <!-- entities -->
      <fileset dir="${projectfolder.entities}/${folder.bin}" />
      <fileset dir="${projectfolder.entities}/${folder.res}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the query service.		-->
  <!-- ========================================================== -->
  <target name="package-queryService">
    <echo>Creating JAR for the Query Service...</echo>
    <jar destfile="${projectfolder.queryService}/${folder.dist}/${name.project}-${module.queryService}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.queryService}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.queryService}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
      <!-- entities -->
      <fileset dir="${projectfolder.entities}/${folder.bin}" />
      <fileset dir="${projectfolder.entities}/${folder.res}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the authentication service.		-->
  <!-- ========================================================== -->
  <target name="package-authService">
    <echo>Creating JAR for the Authentication Service...</echo>
    <jar destfile="${projectfolder.authService}/${folder.dist}/${name.project}-${module.authService}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.authService}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.authService}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the usermanagemt service.		-->
  <!-- ========================================================== -->
  <target name="package-userMgmt">
    <echo>Creating JAR for the User Management Service...</echo>
    <jar destfile="${projectfolder.userMgmt}/${folder.dist}/${name.project}-${module.userMgmt}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.userMgmt}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.userMgmt}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the item management service.		-->
  <!-- ========================================================== -->
  <target name="package-itemMgmt">
    <echo>Creating JAR for the Item Management Service...</echo>
    <jar destfile="${projectfolder.itemMgmt}/${folder.dist}/${name.project}-${module.itemMgmt}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.itemMgmt}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.itemMgmt}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the bid and buy service.			-->
  <!-- ========================================================== -->
  <target name="package-bidAndBuyService">
    <echo>Creating JAR for the Bid and Buy Service...</echo>
    <jar destfile="${projectfolder.bidAndBuyService}/${folder.dist}/${name.project}-${module.bidAndBuyService}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.bidAndBuyService}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.bidAndBuyService}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>


  <!-- ========================================================== -->
  <!-- Builds the jar file for the reputation service.			-->
  <!-- ========================================================== -->
  <target name="package-reputationService">
    <echo>Creating JAR for the Reputation Service...</echo>
    <jar destfile="${projectfolder.reputationService}/${folder.dist}/${name.project}-${module.reputationService}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.reputationService}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.reputationService}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the inventory service.				-->
  <!-- ========================================================== -->
  <target name="package-inventoryService">
    <echo>Creating JAR for the Inventory Service...</echo>
    <jar destfile="${projectfolder.inventoryMgmt}/${folder.dist}/${name.project}-${module.inventoryMgmt}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.inventoryMgmt}/${folder.bin}" />
      <!-- resources of the service -->
      <fileset dir="${projectfolder.inventoryMgmt}/${folder.res}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Builds the jar file for the test client.     				-->
  <!-- ========================================================== -->
  <target name="package-client">
    <echo>Creating JAR for the test Client...</echo>
    <jar destfile="${projectfolder.client}/${folder.dist}/${name.project}-${module.client}.jar">
      <!-- binaries of the service -->
      <fileset dir="${projectfolder.client}/${folder.bin}" />
      <!-- business objects -->
      <fileset dir="${projectfolder.businessObjects}/${folder.bin}" />
      <!-- contracts -->
      <fileset dir="${projectfolder.contracts}/${folder.bin}" />
    </jar>
  </target>

  <!-- ========================================================== -->
  <!-- Copies the built jars to the main distribution folder.		-->
  <!-- ========================================================== -->
  <target name="distribute">
    <copy todir="${folder.dist}">
      <fileset dir="${projectfolder.persistenceService}/${folder.dist}">
        <include name="${name.project}-${module.persistenceService}.jar" />
      </fileset>
      <fileset dir="${projectfolder.queryService}/${folder.dist}">
        <include name="${name.project}-${module.queryService}.jar" />
      </fileset>
      <fileset dir="${projectfolder.authService}/${folder.dist}">
        <include name="${name.project}-${module.authService}.jar" />
      </fileset>
      <fileset dir="${projectfolder.userMgmt}/${folder.dist}">
        <include name="${name.project}-${module.userMgmt}.jar" />
      </fileset>
      <fileset dir="${projectfolder.itemMgmt}/${folder.dist}">
        <include name="${name.project}-${module.itemMgmt}.jar" />
      </fileset>
      <fileset dir="${projectfolder.bidAndBuyService}/${folder.dist}">
        <include name="${name.project}-${module.bidAndBuyService}.jar" />
      </fileset>
      <fileset dir="${projectfolder.reputationService}/${folder.dist}">
        <include name="${name.project}-${module.reputationService}.jar" />
      </fileset>
      <fileset dir="${projectfolder.inventoryMgmt}/${folder.dist}">
        <include name="${name.project}-${module.inventoryMgmt}.jar" />
      </fileset>
      <fileset dir="${projectfolder.client}/${folder.dist}">
        <include name="${name.project}-${module.client}.jar" />
      </fileset>
    </copy>
  </target>

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- Deploys all mRUBiS components 								-->
  <!-- ========================================================== -->
  <target name="deploy">
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.persistenceService}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.queryService}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.authService}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.userMgmt}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.itemMgmt}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.bidAndBuyService}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.reputationService}.jar" />
    </antcall>
    <antcall target="deployEjbModule">
      <param name="module" value="${folder.dist}/${name.project}-${module.inventoryMgmt}.jar" />
    </antcall>
  </target>

  <target name="deployEjbModule" if="module">
    <echo>Start deploying ${module} ...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="deploy" />
      <arg value="${module}" />
    </exec>
  </target>

  <!-- ========================================================== -->
  <!-- Undeploys all mRUBiS components 							-->
  <!-- ========================================================== -->
  <target name="undeploy">
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.persistenceService}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.queryService}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.authService}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.userMgmt}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.itemMgmt}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.bidAndBuyService}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.reputationService}" />
    </antcall>
    <antcall target="undeployEjbModule">
      <param name="module" value="${name.project}-${module.inventoryMgmt}" />
    </antcall>
  </target>

  <target name="undeployEjbModule" if="module">
    <echo>Start undeploying ${module} ...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="undeploy" />
      <arg value="${module}" />
    </exec>
  </target>

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- mRUBiS database 											-->
  <!-- ========================================================== -->
  <path id="database-libraries">
    <fileset dir="${database.lib}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- Database setup -->
  <target name="setup-database">
    <antcall target="create-database" />
    <sleep milliseconds="5000" />
    <antcall target="insert-data" />
  </target>
  <!-- Reset data in the database -->
  <target name="reset-database">
    <antcall target="delete-data" />
    <sleep milliseconds="5000" />
    <antcall target="insert-data" />
  </target>
  <!-- Database cleanup -->
  <target name="cleanup-database">
    <antcall target="drop-database" />
  </target>

  <!-- Creates the database schema -->
  <target name="create-database">
    <!-- delete directory storing the database -->
    <delete quiet="true" failonerror="false" dir="${database.folder}/${database.name}" />
    <java fork="true" classname="org.apache.derby.tools.ij" classpathref="database-libraries">
      <sysproperty key="ij.connection.${database.name}-conn" value="${database.url};create=true" />
      <sysproperty key="derby.system.home" value="${database.folder}"/>
      <arg value="${sql.dir}/${sql.file.create}" />
    </java>
  </target>
  <!-- Inserts test data to the database -->
  <target name="insert-data">
    <java fork="true" classname="org.apache.derby.tools.ij" classpathref="database-libraries">
      <sysproperty key="ij.connection.${database.name}-conn" value="${database.url}" />
      <sysproperty key="derby.system.home" value="${database.folder}"/>
      <arg value="${sql.dir}/${sql.file.insertdata}" />
    </java>
  </target>
  <!-- Deletes all data from the database -->
  <target name="delete-data">
    <java fork="true" classname="org.apache.derby.tools.ij" classpathref="database-libraries">
      <sysproperty key="ij.connection.${database.name}-conn" value="${database.url}" />
      <sysproperty key="derby.system.home" value="${database.folder}"/>
      <arg value="${sql.dir}/${sql.file.deletedata}" />
    </java>
  </target>
  <!-- Drops the database schema -->
  <target name="drop-database">
    <java fork="true" classname="org.apache.derby.tools.ij" classpathref="database-libraries">
      <sysproperty key="ij.connection.${database.name}-conn" value="${database.url}" />
      <sysproperty key="derby.system.home" value="${database.folder}"/>
      <arg value="${sql.dir}/${sql.file.drop}" />
    </java>
    <!-- delete directory storing the database -->
    <delete quiet="true" failonerror="false" dir="${database.folder}/${database.name}" />
  </target>

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- Install mRUBiS and database 								-->
  <!-- ========================================================== -->
  <target name="install" depends="build">
    <antcall target="setup-database" />
    <antcall target="deploy" />
  </target>

  <!-- ========================================================== -->
  <!-- Uninstall mRUBiS and database 								-->
  <!-- ========================================================== -->
  <target name="uninstall">
    <antcall target="cleanup-database" />
    <antcall target="undeploy" />
  </target>

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->

  <!-- ========================================================== -->
  <!-- Start, Stop, Restart Glassfish Domain and Database Server	-->
  <!-- ========================================================== -->
  <target name="start-domain">
    <echo>Starting Glassfish Domain...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="start-domain" />
      <arg value="domain1" />
    </exec>
  </target>

  <target name="stop-domain">
    <echo>Stopping Glassfish Domain...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="stop-domain" />
      <arg value="domain1" />
    </exec>
  </target>

  <target name="start-database">
    <echo>Starting database server...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="start-database" />
      <arg value="--dbhome" />
      <arg value="${database.folder}" />
    </exec>
  </target>

  <target name="stop-database">
    <echo>Stopping database server...</echo>
    <exec executable="${glassfish.home}/bin/asadmin">
      <arg value="stop-database" />
    </exec>
  </target>

  <target name="start-server">
    <antcall target="start-database" />
    <antcall target="start-domain" />
  </target>

  <target name="stop-server">
    <antcall target="stop-domain" />
    <antcall target="stop-database" />
  </target>

  <target name="restart-server">
    <antcall target="stop-server" />
    <antcall target="start-server" />
  </target>

  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->
</project>
